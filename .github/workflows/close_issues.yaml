name: Close Dataset Issues

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  close-issues:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Load Issue Mapping
        id: load-mapping
        run: |
          if [ -f .github/issue_mapping.yaml ]; then
            echo "ISSUE_MAPPING=$(cat .github/issue_mapping.yaml)"
            echo "ISSUE_MAPPING=$(cat .github/issue_mapping.yaml)" >> $GITHUB_ENV
          else
            echo "No issue mapping file found."
            exit 1
          fi
      - name: Debug Event Payload
        run: |
          echo "Dumping event payload for inspection:"
          cat $GITHUB_EVENT_PATH
          echo "${{ github.event }}"

      - name: Get Modified Files
        id: get-modified-files
        run: |
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          MODIFIED_FILES=$(git diff --name-only $BASE_SHA HEAD)
          echo "modified files: $MODIFIED_FILES"
          CLOSED_IDS=$(echo "$MODIFIED_FILES" | grep -E '^[^/]+\.yaml$' | sed 's|\.yaml$||')
          echo "closed ids: $CLOSED_IDS"
          echo "CLOSED_IDS=$CLOSED_IDS" >> $GITHUB_ENV

      - name: Close Issues for Datasets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_MAPPING: ${{ env.ISSUE_MAPPING }}
          CLOSED_IDS: ${{ env.CLOSED_IDS }}
        run: |
          echo "Closing issues for IDs: $CLOSED_IDS"
          for ID in $CLOSED_IDS; do
            ISSUE_NUMBER=$(echo "$ISSUE_MAPPING" | grep "$ID:" | cut -d ":" -f 2 | xargs)
            if [ -n "$ISSUE_NUMBER" ]; then
              RESPONSE=$(curl -s -S -X PATCH \
                   -H "Authorization: token $GITHUB_TOKEN" \
                   -H "Accept: application/vnd.github+json" \
                   "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$ISSUE_NUMBER" \
                   -d '{"state": "closed"}')
              echo "Response for closing issue #$ISSUE_NUMBER for dataset $ID: $RESPONSE"
            else
              echo "No issue found for dataset $ID."
            fi
          done
